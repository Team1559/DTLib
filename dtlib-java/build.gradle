/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

/*
 * This file is primarily sourced (but heavily modified) from FRC Team 578's library under the MIT license
 * https://github.com/FairportRobotics/potential-octo-eureka
 */

import org.gradle.internal.os.OperatingSystem

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id "edu.wpi.first.GradleRIO" version "2023.4.2"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

version = '0.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()

    // Custom repo endpoints
    maven { url "https://maven.ctr-electronics.com/release/" }
    maven { url "https://maven.photonvision.org/repository/internal" }
    maven { url "https://maven.photonvision.org/repository/snapshots" }
    maven { url "https://maven.revrobotics.com/" }

    // Resolve WPILib installation
    String frcYear = '2023'
    File frcHome
    if (OperatingSystem.current().isWindows()) {
        String publicFolder = System.getenv('PUBLIC')
        if (publicFolder == null) {
            publicFolder = "C:\\Users\\Public"
        }
        def homeRoot = new File(publicFolder, "wpilib")
        frcHome = new File(homeRoot, frcYear)
    } else {
        def userFolder = System.getProperty("user.home")
        def homeRoot = new File(userFolder, "wpilib")
        frcHome = new File(homeRoot, frcYear)
    }
    def frcHomeMaven = new File(frcHome, 'maven')
    maven {
        name 'frcHome'
        url frcHomeMaven
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // Add standard WPILib classes
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    // Vendor dependencies

    implementation 'com.ctre.phoenix:api-java:5.30.3'
    implementation 'com.ctre.phoenix:wpiapi-java:5.30.3'

    implementation 'com.revrobotics.frc:REVLib-java:2023.1.3'

    implementation "org.photonvision:PhotonLib-java:v2023.+"
    implementation "org.photonvision:PhotonTargeting-java:v2023.+"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

// Add classpath to manifest
jar {
    manifest {
        attributes (
            "Class-Path": configurations.compileClasspath.collect { it.name }.join(' ')
        )
    }
}

// Publish package to GitHub
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Team1559/DTLib")
            credentials {
                username = project.findProperty("gpr.user") ?: "Team1559"
                password = project.findProperty("gpr.key") ?: "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"
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = 'org.victorrobotics'
            artifactId = 'dtlib-java'
            version = '0.1'
            from(components.java)
        }
    }
}
